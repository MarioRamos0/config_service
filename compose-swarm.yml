version: '3.9'

services:
  postgres-db:
    image: postgres:17-alpine3.22
    restart: always
    deploy:
      replicas: 1
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cfgsycapi_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-app:
    image: marioramos0/cfgsvg4:1.1
    build: .
    deploy:
      replicas: 3
    ports:
      - "${PORT}:8000"
    environment:
      DEBUG: 'false'
      ENV: 'development'
      PORT: ${PORT:-8000}
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/${POSTGRES_DB}?options=-csearch_path=config_service
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - cfgsycapi_net
    command: python main.py
    restart: always


volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nfssrv01,rw
      device: ":/data/docker-vols/group04/postgres_data"

networks:
  cfgsycapi_net:
    driver: overlay