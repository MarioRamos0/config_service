version: '3.9'

secrets:
  jwt_secret:
    file: ./jwt_secret
  db_password:
    file: ./db_password
  db_user:
    file: ./db_user
  db_name:
    file: ./db_name
  database_url:
    file: ./database_url

services:
  postgres-db:
    image: postgres:17-alpine3.22
    restart: always
    deploy:
      replicas: 1
    environment:
      POSTGRES_DB: /run/secrets/db_name
      POSTGRES_USER: /run/secrets/db_user
      POSTGRES_PASSWORD: /run/secrets/db_password
    secrets:
      - db_password
      - db_user
      - db_name
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cfgsycapi_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_user)"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-app:
    image: marioramos0/cfgsvg4:1.1
    restart: always
    deploy:
      replicas: 3
    ports:
      - "${PORT}:8000"
    environment:
      DEBUG: 'false'
      ENV: 'production'
      DATABASE_URL: /run/secrets/database_url
      PORT: ${PORT:-8000}
    secrets:
      - jwt_secret
      - db_password
      - db_user
      - db_name
      - database_url
    networks:
      - cfgsycapi_net

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nfssrv01,rw
      device: ":/data/docker-vols/group04/postgres_data"

networks:
  cfgsycapi_net:
    driver: overlay